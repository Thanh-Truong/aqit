/*-*-sql-*-*******************************************************************
 * AMOS2
 *
 * Author: (c) 2011 Thanh Truong, UDBL
 * $RCSfile: sqlserverbackend.osql,v $
 * $Revision: 1.1 $ $Date: 2012/01/12 15:22:49 $
 * $State: Exp $ $Locker:  $
 *
 * Description: Test AQIT as middle-ware between SQL query 
 *  and SQL Server as backend.
 *
 ****************************************************************************
 * $Log: sqlserverbackend.osql,v $
 * Revision 1.1  2012/01/12 15:22:49  thatr500
 * - added experiments/corel: real image features
 * - added experiments/sqlserver
 *
 * Revision 1.1  2011/11/15 10:46:08  thatr500
 * AQIT plays as mediator between SQL query and SQLServer (backend)
 *
 *
 ****************************************************************************/

/*-------------------------------------------------------------------
 * Wrapping data source 
 * 1. Create new JDBC datasource object :a for remote SQL Server
 * 2. Connect this object to JDBC data source. 				
 * 3. Load JDBC driver + connect to datasource.			
 *-------------------------------------------------------------------*/
create function AQITDS()->jdbc;

set :dburl = "jdbc:microsoft:sqlserver://localhost;DatabaseName=aqit";

set AQITDS()= jdbc("AQIT", "com.microsoft.jdbc.sqlserver.SQLServerDriver");

connect(AQITDS(),:dburl, "aqit", "aqit");

/*Get relation*/
set :r = relational_named("AQIT");

set :tablename = "TBLBTREE";

/*Verify if relation exists */
has_table(:r, :tablename); 

/* *-------------------------------------------------------------------
 * Make the table queryable with SQL query
 * 1. Make an object-oriented view of the table
 * 2. Wrap that view (core cluster function) with a (#) function
 * 3. Declare that table has a B-tree. JDBC should be able to do this
 *    instead. 
 *-------------------------------------------------------------------*/
set :mptyped = import_table(:r, :tablename);

create function #tblbtree()-><Integer x, Integer y> as 
 tblbtree_aqit_cc();

/*Add description about indexing on remote table through cc function*/
add_descr_index_cc('B-tree', #'TBLBTREE_AQIT_CC->INTEGER.INTEGER', 0);

/* *-------------------------------------------------------------------
 * Queries in both AMOSQL and SQL format
 *-------------------------------------------------------------------*/
/*Query in AMOSQL works. It is sent to AQIT and then directed to SQL Server*/
select x(tbl), y(tbl) from tblbtree_aqit tbl where x(tbl)+ 1 < 500;

/*Query in SQL works. It is sent to AQIT and then directed to SQL Server*/
sql("select x from tblbtree where x + 1< 3");

/***********************************************************************
 * Disconnect
 **********************************************************************/
disconnect(AQITDS());
